#!/usr/bin/env python3

#############################################################################################################################################################################
#   The license used for this file and its contents is: BSD-3-Clause                                                                                                        #
#                                                                                                                                                                           #
#   Copyright <2023> <Uri Herrera <uri_herrera@nxos.org>>                                                                                                                   #
#                                                                                                                                                                           #
#   Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:                          #
#                                                                                                                                                                           #
#    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.                                        #
#                                                                                                                                                                           #
#    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer                                      #
#       in the documentation and/or other materials provided with the distribution.                                                                                         #
#                                                                                                                                                                           #
#    3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software                    #
#       without specific prior written permission.                                                                                                                          #
#                                                                                                                                                                           #
#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,                      #
#    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS                  #
#    BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE                 #
#    GOODS OR SERVICES; LOSS OF USE, DATA,   OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,                      #
#    STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   #
#############################################################################################################################################################################


# -- Check IOMMU groups and display output.

import os
import glob
import subprocess

def get_device_description(device_path):
    device_name = os.path.basename(device_path)
    try:
        result = subprocess.run([
            "lspci", "-nn", "-s", device_name
        ], capture_output=True, text=True, check=True)
        return result.stdout.strip() if result.stdout else "Unknown Device"
    except Exception:
        return "Unknown Device"

def list_iommu_groups():
    iommu_path = "/sys/kernel/iommu_groups/"
    if not os.path.exists(iommu_path):
        print("IOMMU groups not found. Ensure IOMMU is enabled in the BIOS and kernel parameters.")
        return
    
    groups = sorted([d for d in os.listdir(iommu_path) if d.isdigit()], key=int)
    
    for group in groups:
        group_path = os.path.join(iommu_path, group, "devices")
        devices = sorted(glob.glob(f"{group_path}/*"))
        
        print(f"IOMMU Group {group}:")
        for i, device in enumerate(devices):
            if os.path.islink(device):
                pci_address = os.path.basename(os.readlink(device))
            else:
                pci_address = os.path.basename(device)
            description = get_device_description(pci_address)
            prefix = "├──" if i < len(devices) - 1 else "└──"
            print(f"  {prefix} {pci_address} ({description})")
        print()

if __name__ == "__main__":
    list_iommu_groups()
